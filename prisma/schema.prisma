generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type OrdersPaymentResult {
  id     String
  status String
}

model accounts {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  access_token      String
  expires_at        Int
  id_token          String
  provider          String
  providerAccountId String
  scope             String
  token_type        String
  type              String
  userId            String @db.ObjectId
}

model blockouts {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  count      Int
  createdAt  DateTime @db.Date
  dateIn     DateTime @db.Date
  dateOut    DateTime @db.Date
  product    String   @db.ObjectId
  softDelete Boolean?
  updatedAt  DateTime @db.Date
  user_id    String
}

model brands {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  category   String
  descripion String
  logoUrl    String
  title      String
  url        String
}

model categories {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  name      String
  updatedAt DateTime @db.Date
}

model ordernotes {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  note      String
  orderId   String   @db.ObjectId
  updatedAt DateTime @db.Date
}

model orders {
  id            String               @id @default(auto()) @map("_id") @db.ObjectId
  v             Int                  @map("__v")
  createdAt     DateTime             @db.Date
  isPaid        Boolean
  itemsPrice    Int
  paidAt        DateTime?            @db.Date
  paymentMethod String
  paymentResult OrdersPaymentResult?
  rentals       String[]             @db.ObjectId
  softDelete    Boolean?
  storeId       String?              @db.ObjectId
  taxPrice      Float
  totalPrice    Float
  updatedAt     DateTime             @db.Date
  user          String               @db.ObjectId
}

model ordertransactions {
  id            String   @id @default(auto()) @map("_id") @db.ObjectId
  v             Int      @map("__v")
  createdAt     DateTime @db.Date
  note          String
  orderId       String?  @db.ObjectId
  transactionId String
  type          String
  updatedAt     DateTime @db.Date
}

model productimages {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  category  String
  createdAt DateTime @db.Date
  path      String
  product   String   @db.ObjectId
  updatedAt DateTime @db.Date
  user      String   @db.ObjectId
}

model products {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  brand       String
  category    String
  createdAt   DateTime @db.Date
  description String
  gender      String?
  imageAlt    String
  imageUrl    String
  price       Int
  rating      Float
  rental_min  Int
  size        String?
  slug        String   @unique(map: "slug_1")
  stock       Int
  title       String
  updatedAt   DateTime @db.Date
}

model rentals {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  v          Int      @map("__v")
  createdAt  DateTime @db.Date
  dateDue    DateTime @db.Date
  dateOut    DateTime @db.Date
  price      Int
  product    String   @db.ObjectId
  quantity   Int
  softDelete Boolean
  updatedAt  DateTime @db.Date
  user       String   @db.ObjectId
}

model sellerproducts {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  v           Int      @map("__v")
  blockOuts   String[] @db.ObjectId
  brand       String
  category    String
  condition   String?
  createdAt   DateTime @db.Date
  description String
  gender      String?
  images      String[] @db.ObjectId
  keyword     String?
  price       Int
  product     String
  rentalMin   Int
  rentals     String[] @db.ObjectId
  size        String?
  slug        String   @unique(map: "slug_1")
  softDelete  Boolean?
  stock       Int
  title       String
  updatedAt   DateTime @db.Date
  user        String   @db.ObjectId
}

model sessions {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  expires      DateTime @db.Date
  sessionToken String
  userId       String   @db.ObjectId
}

model usermessages {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  v         Int      @map("__v")
  createdAt DateTime @db.Date
  message   String
  product   String?  @db.ObjectId
  rental    String?  @db.ObjectId
  sentBy    String   @db.ObjectId
  sentTo    String   @db.ObjectId
  updatedAt DateTime @db.Date
}

model users {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  email         String
  emailVerified DateTime? @db.Date
  image         String
  name          String
  role          String?
  seller        Boolean?
}
